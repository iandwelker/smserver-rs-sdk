#[command(subdir = "data", data_return = true)]
#[parameters(path = "&str")]
GetAttachment

============================================

impl RestAPIClient {
	pub async fn get_attachment(
		&self, path: &str
	) -> anyhow::Result<Vec<u8>> {
		let mut query_string = self.config.push_to_rest_url("data");
		let query_string = format!("{}?{}={}", query_string, "path", path.into());

		self.get_url_data(&query_string).await
	}
}

impl APIClient {
	pub async fn get_attachment(
		&mut self, path: &str
	) -> anyhow::Result<Vec<u8>> {
		if self.uses_rest {
			return self.rest_client.get_attachment(path).await;
		}

		let id = match self.socket.get_attachment(path).await {
			Ok(x) => x,
			Err(err) => return Err(err.into())
		};

		let (sender, receiver) = std::sync::mpsc::channel();

		self.sock_msgs.insert(id, sender);

		if let Ok(msg) = receiver.recv() {
			match serde_json::from_value(msg.data) {
				Ok(data) => Ok(data),
				Err(err) => err.into()
			}
		} else {
			Err(SDKError::MangledReceive.into())
		}
	}
}
